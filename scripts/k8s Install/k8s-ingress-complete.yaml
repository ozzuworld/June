---
# Enhanced Ingress with SSL and Wildcard Certificate Support
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: june-ingress
  namespace: june-services
  labels:
    app.kubernetes.io/name: june
    app.kubernetes.io/component: ingress
  annotations:
    # NGINX Ingress Controller annotations
    kubernetes.io/ingress.class: "nginx"
    
    # SSL and certificate configuration - UPDATED for wildcard support
    cert-manager.io/cluster-issuer: "letsencrypt-staging"  # Change to letsencrypt-prod when ready
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # CORS settings
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    
    # Upload size limits
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    
    # Timeout settings
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"

spec:
  # UPDATED: Wildcard TLS configuration - covers ALL subdomains with one certificate
  tls:
  - hosts:
    - "*.allsafe.world"        # Wildcard covers all subdomains
    - "allsafe.world"          # Include root domain if needed
    secretName: allsafe-wildcard-tls  # cert-manager will create this automatically
    
  rules:
  # Main API Gateway (Orchestrator)
  - host: api.allsafe.world
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: june-orchestrator
            port:
              number: 8080
  
  # Identity Provider Service
  - host: idp.allsafe.world
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: june-idp
            port:
              number: 8080
  
  # Speech-to-Text Service (direct access)
  - host: stt.allsafe.world
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: june-stt
            port:
              number: 8080
  
  # Text-to-Speech Service (direct access)
  - host: tts.allsafe.world
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: june-tts
            port:
              number: 8000
  
  # Web Interface (if you have one)
  - host: app.allsafe.world
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: june-web
            port:
              number: 3000
  
  # Admin Interface
  - host: admin.allsafe.world
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: june-admin
            port:
              number: 8080

  # Future services can be added here without certificate changes
  # The wildcard *.allsafe.world automatically covers them!
