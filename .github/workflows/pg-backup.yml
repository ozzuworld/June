name: Postgres â†’ R2 backup
on:
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch: {}

env:
  REGION: us-central1
  PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}

jobs:
  run-job:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.DEPLOYER_SA }}
          project_id: ${{ env.PROJECT_ID }}
      - uses: google-github-actions/setup-gcloud@v2
      - name: Build & push job image
        run: |
          IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/june/pg-backup:${{ github.sha }}"
          docker build -t "$IMAGE" jobs/pg-backup
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet
          docker push "$IMAGE"
      - name: Create/update & run job
        run: |
          IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/june/pg-backup:${{ github.sha }}"
          if gcloud run jobs describe pg-backup --region ${{ env.REGION }} >/dev/null 2>&1; then
            gcloud run jobs update pg-backup --image "$IMAGE" --region ${{ env.REGION }}               --set-secrets NEON_DB_URL=NEON_DB_URL:latest               --set-secrets R2_ENDPOINT=R2_ENDPOINT:latest               --set-secrets R2_BUCKET=R2_BUCKET:latest               --set-secrets AWS_ACCESS_KEY_ID=R2_ACCESS_KEY_ID:latest               --set-secrets AWS_SECRET_ACCESS_KEY=R2_SECRET_ACCESS_KEY:latest
          else
            gcloud run jobs create pg-backup --image "$IMAGE" --region ${{ env.REGION }}               --set-secrets NEON_DB_URL=NEON_DB_URL:latest               --set-secrets R2_ENDPOINT=R2_ENDPOINT:latest               --set-secrets R2_BUCKET=R2_BUCKET:latest               --set-secrets AWS_ACCESS_KEY_ID=R2_ACCESS_KEY_ID:latest               --set-secrets AWS_SECRET_ACCESS_KEY=R2_SECRET_ACCESS_KEY:latest
          fi
          gcloud run jobs run pg-backup --region ${{ env.REGION }}
