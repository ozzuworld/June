name: 🚀 Deploy June Platform (Helm)

on:
  push:
    branches: [master, main]
    paths-ignore: 
      - 'README.md'
      - 'docs/**'
  pull_request:
    branches: [master, main]
  workflow_dispatch:
    inputs:
      deploy_env:
        description: 'Environment to deploy'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

env:
  HELM_VERSION: v3.13.0

permissions:
  contents: read

jobs:
  # Job 1: Build and push Docker images (unchanged)
  build-images:
    name: 🔨 Build Docker Images
    runs-on: self-hosted
    strategy:
      matrix:
        service: [june-orchestrator, june-stt, june-tts, june-idp]
    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4

      - name: 🔐 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🏗️ Build and Push
        uses: docker/build-push-action@v5
        with:
          context: ./June/services/${{ matrix.service }}
          file: ./June/services/${{ matrix.service }}/Dockerfile
          push: true
          tags: |
            docker.io/ozzuworld/${{ matrix.service }}:latest
            docker.io/ozzuworld/${{ matrix.service }}:${{ github.sha }}
          cache-from: type=gha,scope=${{ matrix.service }}
          cache-to: type=gha,mode=max,scope=${{ matrix.service }}

  # Job 2: Deploy with Helm (SIMPLIFIED)
  deploy:
    name: 🚀 Deploy with Helm
    runs-on: self-hosted
    needs: build-images
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4

      - name: ⚙️ Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}

      - name: 🔍 Validate Helm Chart
        run: |
          helm lint helm/june-platform
          helm template june-platform helm/june-platform \
            --set secrets.geminiApiKey=placeholder \
            > /tmp/helm-test.yaml

      - name: 🚀 Deploy with Helm
        run: |
          helm upgrade --install june-platform ./helm/june-platform \
            --namespace june-services \
            --create-namespace \
            --set global.domain="${{ secrets.DOMAIN }}" \
            --set certificate.email="${{ secrets.LETSENCRYPT_EMAIL }}" \
            --set secrets.geminiApiKey="${{ secrets.GEMINI_API_KEY }}" \
            --set secrets.cloudflareToken="${{ secrets.CLOUDFLARE_TOKEN }}" \
            --set orchestrator.image.tag="${{ github.sha }}" \
            --set stt.image.tag="${{ github.sha }}" \
            --set tts.image.tag="${{ github.sha }}" \
            --wait \
            --timeout 15m

      - name: ✅ Verify Deployment
        run: |
          echo "🔍 Checking deployment status..."
          kubectl get pods -n june-services
          kubectl get ingress -n june-services
          kubectl get certificates -n june-services
          
          echo ""
          echo "✅ Deployment Summary:"
          kubectl get deployments -n june-services -o wide
          
          echo ""
          echo "📊 Service Status:"
          kubectl get svc -n june-services

      - name: 🧪 Health Checks
        run: |
          echo "Waiting for services to be ready..."
          sleep 30
          
          # Check orchestrator
          kubectl wait --for=condition=ready pod \
            -l app=june-orchestrator \
            -n june-services \
            --timeout=300s || echo "⚠️ Orchestrator not ready"
          
          # Check other services
          for service in june-stt june-tts june-idp; do
            kubectl wait --for=condition=ready pod \
              -l app=$service \
              -n june-services \
              --timeout=600s || echo "⚠️ $service not ready"
          done
          
          echo "✅ All services deployed!"

  # Job 3: Rollback on failure (optional)
  rollback:
    name: 🔄 Rollback on Failure
    runs-on: self-hosted
    needs: deploy
    if: failure()
    steps:
      - name: 🔄 Rollback Helm Release
        run: |
          echo "⚠️ Deployment failed, rolling back..."
          helm rollback june-platform -n june-services || echo "No previous release to rollback to"