name: Deploy June AI Platform

on:
  push:
    branches: [ main, master ]
    paths:
      - 'June/services/**'
      - '.github/workflows/**'
  workflow_dispatch:

env:
  PROJECT_ID: main-buffer-469817-v7
  REGION: us-central1
  CLUSTER_NAME: june-unified-cluster
  ARTIFACT_REGISTRY: us-central1-docker.pkg.dev/main-buffer-469817-v7/june

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Google Auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.DEPLOYER_SA }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker
      run: gcloud auth configure-docker $REGION-docker.pkg.dev

    - name: Get cluster credentials
      run: |
        gcloud container clusters get-credentials $CLUSTER_NAME \
          --region=$REGION \
          --project=$PROJECT_ID

    - name: Build and push orchestrator
      working-directory: June/services/june-orchestrator
      run: |
        # Build with both SHA tag and stable tag
        IMAGE_SHA="${ARTIFACT_REGISTRY}/june-orchestrator:${{ github.sha }}"
        IMAGE_STABLE="${ARTIFACT_REGISTRY}/june-orchestrator:v2.1.0"
        IMAGE_LATEST="${ARTIFACT_REGISTRY}/june-orchestrator:latest"
        
        echo "Building orchestrator image..."
        docker build \
          --build-arg GIT_SHA=${{ github.sha }} \
          --build-arg BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ") \
          -t "$IMAGE_SHA" \
          -t "$IMAGE_STABLE" \
          -t "$IMAGE_LATEST" \
          .
        
        echo "Pushing images..."
        docker push "$IMAGE_SHA"
        docker push "$IMAGE_STABLE"
        docker push "$IMAGE_LATEST"

    - name: Update deployment
      run: |
        # Update deployment to use the new image with SHA
        kubectl patch deployment june-orchestrator -n june-services -p '{
          "spec": {
            "template": {
              "spec": {
                "containers": [{
                  "name": "orchestrator",
                  "image": "'$ARTIFACT_REGISTRY'/june-orchestrator:'${{ github.sha }}'"
                }]
              }
            }
          }
        }'

    - name: Wait for rollout
      run: |
        kubectl rollout status deployment/june-orchestrator -n june-services --timeout=300s

    - name: Verify deployment
      run: |
        echo "Checking pods..."
        kubectl get pods -n june-services -l app=june-orchestrator
        
        echo "Testing internal connectivity..."
        kubectl run verify-deploy-${{ github.run_number }} --rm -i --tty --image=curlimages/curl --restart=Never -- \
          curl -s http://june-orchestrator.june-services.svc.cluster.local/v1/version || echo "Internal test failed"
        
        echo "Deployment complete!"
