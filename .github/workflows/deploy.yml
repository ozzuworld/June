# .github/workflows/deploy.yml - UPDATED FOR CHATTERBOX TTS
name: Deploy Services to Cloud Run

on:
  push:
    branches: [main]
    paths:
      - 'June/services/**'
      - '.github/workflows/deploy.yml'
  workflow_dispatch: {}

env:
  PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  REGION: ${{ vars.GCP_REGION || 'us-central1' }}
  AR_REPO: ${{ vars.ARTIFACT_REPO || 'june' }}

jobs:
  deploy-services:
    name: Deploy June Services
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    
    strategy:
      matrix:
        service:
          - name: june-orchestrator
            path: June/services/june-orchestrator
            memory: 512Mi
            cpu: 1
            min-instances: 0
          - name: june-stt
            path: June/services/june-stt
            memory: 2Gi
            cpu: 2
            min-instances: 1
          - name: june-tts
            path: June/services/june-tts
            memory: 4Gi
            cpu: 4
            min-instances: 0

    steps:
      - uses: actions/checkout@v4

      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.DEPLOYER_SA }}

      - uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: gcloud auth configure-docker "${REGION}-docker.pkg.dev" --quiet

      - name: Build and Push Image
        run: |
          IMAGE="${REGION}-docker.pkg.dev/${PROJECT_ID}/${AR_REPO}/${{ matrix.service.name }}:${GITHUB_SHA}"
          docker build -t "$IMAGE" "${{ matrix.service.path }}"
          docker push "$IMAGE"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Deploy to Cloud Run
        run: |
          # Service-specific configurations
          DEPLOY_ARGS=""
          
          case "${{ matrix.service.name }}" in
            june-orchestrator)
              SA="orchestrator-svc"
              ENV_VARS="STT_SERVICE_URL=https://june-stt-${PROJECT_ID//-/}.run.app"
              ENV_VARS="${ENV_VARS},TTS_SERVICE_URL=https://june-tts-${PROJECT_ID//-/}.run.app"
              ENV_VARS="${ENV_VARS},ORCHESTRATOR_CLIENT_ID=${{ secrets.ORCHESTRATOR_CLIENT_ID }}"
              ENV_VARS="${ENV_VARS},ORCHESTRATOR_CLIENT_SECRET=${{ secrets.ORCHESTRATOR_CLIENT_SECRET }}"
              ENV_VARS="${ENV_VARS},GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}"
              ENV_VARS="${ENV_VARS},KC_BASE_URL=${{ secrets.KC_BASE_URL }}"
              ENV_VARS="${ENV_VARS},KC_REALM=${{ secrets.KC_REALM || 'june' }}"
              ;;
            
            june-stt)
              SA="stt-svc"
              ENV_VARS="STT_CLIENT_ID=${{ secrets.STT_CLIENT_ID }}"
              ENV_VARS="${ENV_VARS},STT_CLIENT_SECRET=${{ secrets.STT_CLIENT_SECRET }}"
              ENV_VARS="${ENV_VARS},GOOGLE_APPLICATION_CREDENTIALS=/dev/null"
              ENV_VARS="${ENV_VARS},KC_BASE_URL=${{ secrets.KC_BASE_URL }}"
              ENV_VARS="${ENV_VARS},KC_REALM=${{ secrets.KC_REALM || 'june' }}"
              ;;
            
            june-tts)
              SA="tts-svc"
              ENV_VARS="TTS_CLIENT_ID=${{ secrets.TTS_CLIENT_ID }}"
              ENV_VARS="${ENV_VARS},TTS_CLIENT_SECRET=${{ secrets.TTS_CLIENT_SECRET }}"
              ENV_VARS="${ENV_VARS},CHATTERBOX_API_URL=http://localhost:8000"
              ENV_VARS="${ENV_VARS},DEFAULT_VOICE=af_bella"
              ENV_VARS="${ENV_VARS},ENABLE_VOICE_CLONING=true"
              ENV_VARS="${ENV_VARS},KC_BASE_URL=${{ secrets.KC_BASE_URL }}"
              ENV_VARS="${ENV_VARS},KC_REALM=${{ secrets.KC_REALM || 'june' }}"
              DEPLOY_ARGS="--execution-environment gen2"
              ;;
            
            *)
              SA="${{ matrix.service.name }}-svc"
              ENV_VARS="KC_BASE_URL=${{ secrets.KC_BASE_URL }},KC_REALM=${{ secrets.KC_REALM || 'june' }}"
              ;;
          esac
          
          gcloud run deploy ${{ matrix.service.name }} \
            --image="${{ env.IMAGE }}" \
            --region="${REGION}" \
            --service-account="${SA}@${PROJECT_ID}.iam.gserviceaccount.com" \
            --cpu="${{ matrix.service.cpu }}" \
            --memory="${{ matrix.service.memory }}" \
            --min-instances="${{ matrix.service.min-instances }}" \
            --max-instances="10" \
            --timeout="300" \
            --concurrency="10" \
            --allow-unauthenticated \
            --set-env-vars="${ENV_VARS}" \
            ${DEPLOY_ARGS}

      - name: Verify Deployment
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ matrix.service.name }} \
            --region="${REGION}" --format='value(status.url)')
          
          echo "✅ ${{ matrix.service.name }} deployed: $SERVICE_URL"
          
          # Health check
          sleep 10
          curl -f "${SERVICE_URL}/healthz" || echo "Health check failed (service may still be starting)"