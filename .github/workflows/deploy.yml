# .github/workflows/deploy.yml - FIXED FOR CHATTERBOX
name: Deploy Services to Cloud Run

on:
  push:
    branches: [ main, master ]
    paths:
      - 'June/services/**'
      - 'services/**'
      - '.github/workflows/deploy.yml'
  workflow_dispatch: {}

env:
  PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  REGION: ${{ vars.GCP_REGION || 'us-central1' }}
  AR_REPO: ${{ vars.ARTIFACT_REPO || 'june' }}

jobs:
  deploy-core:
    name: Deploy Core Services
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - service: june-idp
            path: services/june-idp
            timeout: 900
            concurrency: 20
            cpu: "2"
            memory: "2Gi"
            min_instances: 1
          - service: june-orchestrator  
            path: June/services/june-orchestrator
            timeout: 3600
            concurrency: 10
            cpu: "1"
            memory: "512Mi"
            min_instances: 0
          - service: june-stt
            path: June/services/june-stt
            timeout: 3600
            concurrency: 1
            cpu: "2"
            memory: "1Gi"
            min_instances: 1
          - service: june-tts
            path: June/services/june-tts
            timeout: 1800
            concurrency: 2
            cpu: "4"
            memory: "8Gi"
            min_instances: 0

    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.DEPLOYER_SA }}
          project_id: ${{ env.PROJECT_ID }}

      - uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: gcloud auth configure-docker "${REGION}-docker.pkg.dev" --quiet

      - name: Build and Deploy
        run: |
          IMAGE="${REGION}-docker.pkg.dev/${PROJECT_ID}/${AR_REPO}/${{ matrix.service }}:${GITHUB_SHA}"
          
          # Build image
          docker build -t "$IMAGE" "${{ matrix.path }}"
          docker push "$IMAGE"
          
          # Service account mapping
          case "${{ matrix.service }}" in
            june-orchestrator) SA="orchestrator-svc" ;;
            june-idp) SA="june-idp-svc" ;;
            june-stt) SA="stt-svc" ;;
            june-tts) SA="tts-svc" ;;
            *) SA="${{ matrix.service }}-svc" ;;
          esac
          
          # Service-specific deployment
          if [ "${{ matrix.service }}" = "june-idp" ]; then
            # Keycloak deployment
            gcloud run deploy ${{ matrix.service }} \
              --image="$IMAGE" \
              --region="$REGION" \
              --cpu="${{ matrix.cpu }}" \
              --memory="${{ matrix.memory }}" \
              --min-instances="${{ matrix.min_instances }}" \
              --timeout="${{ matrix.timeout }}" \
              --concurrency="${{ matrix.concurrency }}" \
              --service-account="${SA}@${PROJECT_ID}.iam.gserviceaccount.com" \
              --allow-unauthenticated \
              --set-env-vars="KC_DB=postgres,KC_DB_URL=${{ secrets.KC_DB_URL }},KC_DB_USERNAME=${{ secrets.KC_DB_USERNAME }},KC_BOOTSTRAP_ADMIN_USERNAME=admin,KC_BOOTSTRAP_ADMIN_PASSWORD=bootstrap-temp,KC_HTTP_ENABLED=true,KC_HOSTNAME_STRICT=false,KC_TRANSACTION_XA_ENABLED=false,KC_HOSTNAME=${{ secrets.KC_BASE_URL }},KC_CACHE=local" \
              --set-secrets="KC_DB_PASSWORD=KC_DB_PASSWORD:latest" \
              --args="start,--http-enabled=true,--hostname-strict=false,--proxy-headers=xforwarded,--db=postgres,--transaction-xa-enabled=false,--cache=local"
              
          elif [ "${{ matrix.service }}" = "june-tts" ]; then
            # FIXED: Chatterbox TTS deployment with proper environment
            ENV_VARS="KC_BASE_URL=${{ secrets.KC_BASE_URL }},KC_REALM=${{ secrets.KC_REALM || 'june' }}"
            ENV_VARS="${ENV_VARS},TTS_CLIENT_ID=${{ secrets.TTS_CLIENT_ID }}"
            ENV_VARS="${ENV_VARS},TTS_CLIENT_SECRET=${{ secrets.TTS_CLIENT_SECRET }}"
            # Chatterbox-specific settings
            ENV_VARS="${ENV_VARS},DEVICE=cpu,LOG_LEVEL=INFO"
            ENV_VARS="${ENV_VARS},EXAGGERATION=0.5,CFG_WEIGHT=0.5,TEMPERATURE=1.0"
            # Optional: Enable features
            ENV_VARS="${ENV_VARS},ENABLE_VOICE_CLONING=true"
            ENV_VARS="${ENV_VARS},MAX_AUDIO_LENGTH=300"
            
            echo "🎭 Deploying Chatterbox TTS:"
            echo "   • Voice cloning with reference audio"
            echo "   • Multilingual support (23+ languages)"
            echo "   • Emotion control and exaggeration"
            echo "   • OpenAI-compatible API endpoints"
            
            gcloud run deploy ${{ matrix.service }} \
              --image="$IMAGE" \
              --region="$REGION" \
              --cpu="${{ matrix.cpu }}" \
              --memory="${{ matrix.memory }}" \
              --min-instances="${{ matrix.min_instances }}" \
              --timeout="${{ matrix.timeout }}" \
              --concurrency="${{ matrix.concurrency }}" \
              --service-account="${SA}@${PROJECT_ID}.iam.gserviceaccount.com" \
              --allow-unauthenticated \
              --set-env-vars="$ENV_VARS" \
              --execution-environment="gen2" \
              --platform="managed" \
              --max-instances="10"
              
          else
            # Other services (orchestrator, stt)
            ENV_VARS="KC_BASE_URL=${{ secrets.KC_BASE_URL }},KC_REALM=${{ secrets.KC_REALM || 'june' }}"
            
            if [ "${{ matrix.service }}" = "june-orchestrator" ]; then
              ENV_VARS="${ENV_VARS},STT_SERVICE_URL=https://june-stt-359243954.us-central1.run.app"
              ENV_VARS="${ENV_VARS},TTS_SERVICE_URL=https://june-tts-359243954.us-central1.run.app"
              ENV_VARS="${ENV_VARS},ORCHESTRATOR_CLIENT_ID=${{ secrets.ORCHESTRATOR_CLIENT_ID }}"
              ENV_VARS="${ENV_VARS},ORCHESTRATOR_CLIENT_SECRET=${{ secrets.ORCHESTRATOR_CLIENT_SECRET }}"
              ENV_VARS="${ENV_VARS},GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}"
              
            elif [ "${{ matrix.service }}" = "june-stt" ]; then
              ENV_VARS="${ENV_VARS},STT_CLIENT_ID=${{ secrets.STT_CLIENT_ID }}"
              ENV_VARS="${ENV_VARS},STT_CLIENT_SECRET=${{ secrets.STT_CLIENT_SECRET }}"
              ENV_VARS="${ENV_VARS},GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}"
              ENV_VARS="${ENV_VARS},FIREBASE_PROJECT_ID=${{ env.PROJECT_ID }}"
            fi
            
            gcloud run deploy ${{ matrix.service }} \
              --image="$IMAGE" \
              --region="$REGION" \
              --cpu="${{ matrix.cpu }}" \
              --memory="${{ matrix.memory }}" \
              --min-instances="${{ matrix.min_instances }}" \
              --timeout="${{ matrix.timeout }}" \
              --concurrency="${{ matrix.concurrency }}" \
              --service-account="${SA}@${PROJECT_ID}.iam.gserviceaccount.com" \
              --allow-unauthenticated \
              --set-env-vars="$ENV_VARS"
          fi