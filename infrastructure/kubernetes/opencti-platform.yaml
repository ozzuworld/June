# OpenCTI Platform and Supporting Services
# Elasticsearch Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: opencti
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: search-engine
    app.kubernetes.io/part-of: opencti
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: elasticsearch
  template:
    metadata:
      labels:
        app.kubernetes.io/name: elasticsearch
        app.kubernetes.io/component: search-engine
    spec:
      serviceAccountName: opencti-serviceaccount
      initContainers:
      - name: sysctl
        image: busybox:1.35
        command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
        env:
        - name: discovery.type
          value: single-node
        - name: ES_JAVA_OPTS
          value: "-Xms4g -Xmx4g"
        - name: xpack.security.enabled
          value: "false"
        - name: bootstrap.memory_lock
          value: "true"
        ports:
        - containerPort: 9200
          name: http
        - containerPort: 9300
          name: transport
        resources:
          requests:
            memory: "6Gi"
            cpu: "1000m"
          limits:
            memory: "8Gi"
            cpu: "2000m"
        volumeMounts:
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
        - name: elasticsearch-config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          fsGroup: 1000
        readinessProbe:
          httpGet:
            path: /_cluster/health
            port: 9200
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /_cluster/health
            port: 9200
          initialDelaySeconds: 60
          periodSeconds: 20
      volumes:
      - name: elasticsearch-data
        persistentVolumeClaim:
          claimName: elasticsearch-data-pvc
      - name: elasticsearch-config
        configMap:
          name: elasticsearch-config

---
# Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: opencti
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: opencti
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/component: cache
    spec:
      serviceAccountName: opencti-serviceaccount
      containers:
      - name: redis
        image: redis:7.2-alpine
        command: ['redis-server', '/etc/redis/redis.conf']
        ports:
        - containerPort: 6379
          name: redis
        resources:
          requests:
            memory: "1Gi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "500m"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data-pvc
      - name: redis-config
        configMap:
          name: redis-config

---
# RabbitMQ Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: opencti
  labels:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/component: message-queue
    app.kubernetes.io/part-of: opencti
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rabbitmq
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rabbitmq
        app.kubernetes.io/component: message-queue
    spec:
      serviceAccountName: opencti-serviceaccount
      containers:
      - name: rabbitmq
        image: rabbitmq:3.13-management-alpine
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: "opencti"
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: opencti-secrets
              key: rabbitmq-password
        ports:
        - containerPort: 5672
          name: amqp
        - containerPort: 15672
          name: management
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
        - name: rabbitmq-config
          mountPath: /etc/rabbitmq
        readinessProbe:
          exec:
            command:
            - rabbitmq-diagnostics
            - check_running
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - rabbitmq-diagnostics
            - check_running
          initialDelaySeconds: 30
          periodSeconds: 20
      volumes:
      - name: rabbitmq-data
        persistentVolumeClaim:
          claimName: rabbitmq-data-pvc
      - name: rabbitmq-config
        configMap:
          name: rabbitmq-config

---
# MinIO Deployment (S3-compatible storage)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: opencti
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: object-storage
    app.kubernetes.io/part-of: opencti
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
        app.kubernetes.io/component: object-storage
    spec:
      serviceAccountName: opencti-serviceaccount
      containers:
      - name: minio
        image: quay.io/minio/minio:RELEASE.2024-09-13T20-26-02Z
        command:
        - /bin/bash
        - -c
        args:
        - minio server /data --console-address ":9001"
        env:
        - name: MINIO_ROOT_USER
          value: "opencti"
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: opencti-secrets
              key: minio-password
        ports:
        - containerPort: 9000
          name: api
        - containerPort: 9001
          name: console
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: minio-data
          mountPath: /data
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 20
      volumes:
      - name: minio-data
        persistentVolumeClaim:
          claimName: minio-data-pvc

---
# OpenCTI Platform Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opencti-platform
  namespace: opencti
  labels:
    app.kubernetes.io/name: opencti
    app.kubernetes.io/component: platform
    app.kubernetes.io/part-of: opencti
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: opencti
      app.kubernetes.io/component: platform
  template:
    metadata:
      labels:
        app.kubernetes.io/name: opencti
        app.kubernetes.io/component: platform
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "4000"
    spec:
      serviceAccountName: opencti-serviceaccount
      containers:
      - name: opencti
        image: opencti/platform:6.3.7
        env:
        - name: NODE_OPTIONS
          value: "--max-old-space-size=8096"
        - name: APP__PORT
          value: "4000"
        - name: APP__BASE_URL
          value: "http://opencti-platform.opencti.svc.cluster.local:4000"
        - name: APP__ADMIN__EMAIL
          value: "admin@opencti.io"
        - name: APP__ADMIN__PASSWORD
          valueFrom:
            secretKeyRef:
              name: opencti-secrets
              key: admin-password
        - name: APP__ADMIN__TOKEN
          valueFrom:
            secretKeyRef:
              name: opencti-secrets
              key: admin-token
        - name: APP__APP_LOGS__LOGS_LEVEL
          value: "info"
        # Elasticsearch configuration
        - name: ELASTICSEARCH__URL
          value: "http://elasticsearch.opencti.svc.cluster.local:9200"
        # Redis configuration
        - name: REDIS__HOSTNAME
          value: "redis.opencti.svc.cluster.local"
        - name: REDIS__PORT
          value: "6379"
        # RabbitMQ configuration
        - name: RABBITMQ__HOSTNAME
          value: "rabbitmq.opencti.svc.cluster.local"
        - name: RABBITMQ__PORT
          value: "5672"
        - name: RABBITMQ__PORT_MANAGEMENT
          value: "15672"
        - name: RABBITMQ__MANAGEMENT_SSL
          value: "false"
        - name: RABBITMQ__USERNAME
          value: "opencti"
        - name: RABBITMQ__PASSWORD
          valueFrom:
            secretKeyRef:
              name: opencti-secrets
              key: rabbitmq-password
        # MinIO configuration
        - name: MINIO__ENDPOINT
          value: "minio.opencti.svc.cluster.local"
        - name: MINIO__PORT
          value: "9000"
        - name: MINIO__USE_SSL
          value: "false"
        - name: MINIO__ACCESS_KEY
          value: "opencti"
        - name: MINIO__SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: opencti-secrets
              key: minio-password
        - name: MINIO__BUCKET_NAME
          value: "opencti-bucket"
        - name: MINIO__BUCKET_REGION
          value: "us-east-1"
        ports:
        - containerPort: 4000
          name: http
        resources:
          requests:
            memory: "4Gi"
            cpu: "1000m"
          limits:
            memory: "8Gi"
            cpu: "2000m"
        readinessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 60
          periodSeconds: 20
        startupProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30