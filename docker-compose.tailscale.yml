# Docker Compose configuration for june-gpu-multi with Tailscale
# This is for local testing and vast.ai deployment
#
# Usage:
#   1. Copy .env.tailscale.example to .env.tailscale
#   2. Fill in your credentials in .env.tailscale
#   3. Install Tailscale on host: curl -fsSL https://tailscale.com/install.sh | sh
#   4. Connect to tailnet: sudo tailscale up
#   5. Run: docker-compose -f docker-compose.tailscale.yml up -d

version: '3.8'

services:
  june-gpu-multi:
    build:
      context: .
      dockerfile: June/services/june-gpu-multi/Dockerfile
    container_name: june-gpu-multi-tailscale
    restart: unless-stopped
    
    # GPU access
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    
    # Environment configuration
    env_file:
      - .env.tailscale
    environment:
      # Service ports
      - STT_PORT=8001
      - TTS_PORT=8000
      
      # Tailscale service endpoints (MagicDNS)
      - ORCHESTRATOR_URL=http://june-orchestrator:8080
      - LIVEKIT_WS_URL=ws://livekit:7880
      - LIVEKIT_HTTP_URL=http://livekit:7880
      
      # GPU configuration
      - WHISPER_DEVICE=cuda
      - WHISPER_COMPUTE_TYPE=float16
      - WHISPER_CACHE_DIR=/app/models
      
      # TTS configuration
      - TTS_CACHE_PATH=/app/cache
      - TTS_HOME=/app/models
      
      # LiveKit room
      - ROOM_NAME=ozzu-main
      
      # Logging
      - DEBUG=false
      - LOG_LEVEL=INFO
    
    # Port mapping (for direct access)
    ports:
      - "8000:8000"  # TTS service
      - "8001:8001"  # STT service
    
    # Volume mounts for model caching
    volumes:
      - june_models:/app/models
      - june_cache:/app/cache
      - /tmp/.X11-unix:/tmp/.X11-unix:rw  # For potential GUI debugging
    
    # Network configuration
    network_mode: host  # Use host networking for Tailscale access
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz", "&&", "curl", "-f", "http://localhost:8001/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Logging
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

# Named volumes for persistent model storage
volumes:
  june_models:
    driver: local
  june_cache:
    driver: local