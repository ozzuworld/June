substitutions:
  _REGION: us-central1
  _REPO: apps
  _TFSTATE_BUCKET: main-buffer-469817-tfstate
  _TFSTATE_PREFIX: iac
  _AUTO_APPLY: "true"

  _ORCH_DIR: services/june-orchestrator
  _STT_DIR: services/june-stt
  _TTS_DIR: services/june-tts

  _TF_DIR: infra
  _BASE_DOMAIN: allsafe.world
  _IMAGE_TAG: $SHORT_SHA

options:
  logging: CLOUD_LOGGING_ONLY

steps:
- name: gcr.io/cloud-builders/docker
  dir: ${_STT_DIR}
  args: ['build','-t','${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/stt:${_IMAGE_TAG}','-t','${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/stt:latest','.']
- name: gcr.io/cloud-builders/docker
  args: ['push','${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/stt:${_IMAGE_TAG}']
- name: gcr.io/cloud-builders/docker
  args: ['push','${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/stt:latest']

- name: gcr.io/cloud-builders/docker
  dir: ${_TTS_DIR}
  args: ['build','-t','${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/tts:${_IMAGE_TAG}','-t','${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/tts:latest','.']
- name: gcr.io/cloud-builders/docker
  args: ['push','${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/tts:${_IMAGE_TAG}']
- name: gcr.io/cloud-builders/docker
  args: ['push','${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/tts:latest']

- name: gcr.io/cloud-builders/docker
  dir: ${_ORCH_DIR}
  args: ['build','-t','${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/orchestrator:${_IMAGE_TAG}','-t','${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/orchestrator:latest','.']
- name: gcr.io/cloud-builders/docker
  args: ['push','${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/orchestrator:${_IMAGE_TAG}']
- name: gcr.io/cloud-builders/docker
  args: ['push','${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/orchestrator:latest']

- name: hashicorp/terraform:1.8
  id: tf-init
  dir: ${_TF_DIR}
  entrypoint: sh
  args: ['-c','set -eux; printf "bucket = \"%s\"\nprefix = \"%s\"\n" "${_TFSTATE_BUCKET}" "${_TFSTATE_PREFIX}" > backend.hcl; terraform init -reconfigure -backend-config=backend.hcl']

- name: hashicorp/terraform:1.8
  id: tf-plan
  dir: ${_TF_DIR}
  env:
    - TF_VAR_project_id=$PROJECT_ID
    - TF_VAR_region=${_REGION}
    - TF_VAR_zone=us-central1-a
    - TF_VAR_repo_name=${_REPO}
    - TF_VAR_firebase_project_id=$PROJECT_ID
    - TF_VAR_domain=${_BASE_DOMAIN}
    - TF_VAR_orchestrator_image=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/orchestrator:${_IMAGE_TAG}
    - TF_VAR_stt_image=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/stt:${_IMAGE_TAG}
    - TF_VAR_tts_image=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/tts:${_IMAGE_TAG}
  entrypoint: sh
  args: ['-c','set -eux; terraform plan -input=false -out tfplan']

- name: hashicorp/terraform:1.8
  id: tf-apply
  dir: ${_TF_DIR}
  env: ['AUTO_APPLY=${_AUTO_APPLY}']
  entrypoint: sh
  args: ['-c','set -eux; if [ "${AUTO_APPLY}" = "true" ]; then terraform apply -input=false -auto-approve tfplan; else echo "Skipping apply"; fi']

images:
  - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/stt:${_IMAGE_TAG}
  - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/stt:latest
  - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/tts:${_IMAGE_TAG}
  - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/tts:latest
  - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/orchestrator:${_IMAGE_TAG}
  - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/orchestrator:latest
