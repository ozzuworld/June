---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: june-services
  labels:
    name: june-services

---
# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: june-config
  namespace: june-services
data:
  APP_ENV: production
  LOG_LEVEL: info
  REGION: us-central1

---
# Secrets (use for non-sensitive defaults, override with actual secrets)
apiVersion: v1
kind: Secret
metadata:
  name: june-secrets
  namespace: june-services
type: Opaque
stringData:
  gemini-api-key: "PLACEHOLDER"
  keycloak-client-secret: "PLACEHOLDER"

---
# June STT Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: june-stt
  namespace: june-services
  labels:
    app: june-stt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: june-stt
  template:
    metadata:
      labels:
        app: june-stt
    spec:
      containers:
      - name: stt
        image: ozzuworld/june-stt:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        env:
        - name: PORT
          value: "8080"
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 20

---
apiVersion: v1
kind: Service
metadata:
  name: june-stt
  namespace: june-services
spec:
  type: ClusterIP
  selector:
    app: june-stt
  ports:
  - port: 8080
    targetPort: 8080
    name: http

---
# June TTS Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: june-tts
  namespace: june-services
  labels:
    app: june-tts
spec:
  replicas: 1
  selector:
    matchLabels:
      app: june-tts
  template:
    metadata:
      labels:
        app: june-tts
    spec:
      containers:
      - name: tts
        image: ozzuworld/june-tts:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        env:
        - name: PORT
          value: "8000"
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 120
          periodSeconds: 20

---
apiVersion: v1
kind: Service
metadata:
  name: june-tts
  namespace: june-services
spec:
  type: ClusterIP
  selector:
    app: june-tts
  ports:
  - port: 8000
    targetPort: 8000
    name: http

---
# June Orchestrator Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: june-orchestrator
  namespace: june-services
  labels:
    app: june-orchestrator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: june-orchestrator
  template:
    metadata:
      labels:
        app: june-orchestrator
    spec:
      containers:
      - name: orchestrator
        image: ozzuworld/june-orchestrator:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        env:
        - name: PORT
          value: "8080"
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: june-secrets
              key: gemini-api-key
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 15

---
apiVersion: v1
kind: Service
metadata:
  name: june-orchestrator
  namespace: june-services
spec:
  type: ClusterIP
  selector:
    app: june-orchestrator
  ports:
  - port: 8080
    targetPort: 8080
    name: http

---
# June IDP Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: june-idp
  namespace: june-services
  labels:
    app: june-idp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: june-idp
  template:
    metadata:
      labels:
        app: june-idp
    spec:
      containers:
      - name: idp
        image: ozzuworld/june-idp:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 20

---
apiVersion: v1
kind: Service
metadata:
  name: june-idp
  namespace: june-services
spec:
  type: ClusterIP
  selector:
    app: june-idp
  ports:
  - port: 8080
    targetPort: 8080
    name: http

---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: june-ingress
  namespace: june-services
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "june-services-ip"
spec:
  rules:
  - host: api.allsafe.world
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: june-orchestrator
            port:
              number: 8080
  - host: idp.allsafe.world
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: june-idp
            port:
              number: 8080