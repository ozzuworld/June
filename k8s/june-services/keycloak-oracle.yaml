# k8s/june-services/keycloak-oracle-fixed.yaml
# FIXED: Correct Oracle JDBC URL format for wallet connections

apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-config
  namespace: june-services
data:
  # FIXED: Correct Oracle JDBC configuration for wallet
  KC_DB: "oracle"
  # Use TNS alias instead of full connection string with wallet
  KC_DB_URL: "jdbc:oracle:thin:@keycloakdb_high?TNS_ADMIN=/opt/oracle/wallet"
  KC_DB_USERNAME: "keycloak_user"
  KC_HOSTNAME_STRICT: "false"
  KC_HTTP_ENABLED: "true"
  KC_HEALTH_ENABLED: "true"
  KC_METRICS_ENABLED: "true"
  KC_TRANSACTION_XA_ENABLED: "false"
  KC_CACHE: "local"
  KC_LOG_LEVEL: "INFO"
  KC_PROXY: "edge"
  # Oracle environment variables
  TNS_ADMIN: "/opt/oracle/wallet"
  ORACLE_HOME: "/opt/oracle"
  # JVM optimizations for single-pod deployment
  JAVA_OPTS_APPEND: "-XX:MaxRAMPercentage=70.0 -XX:+UseContainerSupport -Dkeycloak.connectionsInfinispan.default.clustered=false"

---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-secrets
  namespace: june-services
type: Opaque
stringData:
  KC_DB_PASSWORD: "KeycloakPass123!@#"
  KEYCLOAK_ADMIN: "admin"
  KEYCLOAK_ADMIN_PASSWORD: "admin123456"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: june-idp
  namespace: june-services
  labels:
    app: june-idp
    component: keycloak
spec:
  # FIXED: Single replica only (no clustering needed)
  replicas: 1
  selector:
    matchLabels:
      app: june-idp
  template:
    metadata:
      labels:
        app: june-idp
        component: keycloak
    spec:
      serviceAccountName: june-idp
      securityContext:
        runAsNonRoot: false
        fsGroup: 1000
      
      initContainers:
      # Setup Oracle wallet permissions
      - name: setup-oracle-wallet
        image: oraclelinux:8-slim
        command: ['sh', '-c']
        args:
          - |
            echo "Setting up Oracle wallet permissions..."
            chmod 644 /opt/oracle/wallet/*
            ls -la /opt/oracle/wallet/
            echo "Checking tnsnames.ora content:"
            cat /opt/oracle/wallet/tnsnames.ora | grep keycloakdb_high || echo "ERROR: keycloakdb_high not found!"
            echo "Oracle wallet setup complete"
        volumeMounts:
        - name: oracle-wallet
          mountPath: /opt/oracle/wallet
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      
      # Test Oracle connectivity
      - name: test-oracle-connection
        image: oraclelinux:8-slim
        command: ['sh', '-c']
        args:
          - |
            echo "Testing Oracle database connectivity..."
            # Test TCP connection
            timeout 10 bash -c "</dev/tcp/adb.us-ashburn-1.oraclecloud.com/1522" && echo "Oracle port 1522 is reachable" || echo "Cannot reach Oracle port 1522"
            
            # Test TNS resolution
            export TNS_ADMIN=/opt/oracle/wallet
            export ORACLE_HOME=/opt/oracle
            
            echo "TNS_ADMIN=$TNS_ADMIN"
            echo "Checking tnsnames.ora for keycloakdb_high:"
            grep -A 5 "keycloakdb_high" /opt/oracle/wallet/tnsnames.ora || echo "keycloakdb_high not found in tnsnames.ora"
            
            echo "Oracle connectivity test complete"
        volumeMounts:
        - name: oracle-wallet
          mountPath: /opt/oracle/wallet
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      
      containers:
      - name: keycloak
        image: quay.io/keycloak/keycloak:23.0.0
        args:
          - "start"
          - "--db=oracle"
          - "--http-enabled=true"
          - "--hostname-strict=false"
          - "--proxy=edge"
          - "--transaction-xa-enabled=false"
          - "--cache=local"
          - "--health-enabled=true"
          - "--metrics-enabled=true"
          - "--log-level=INFO"
        
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        
        # Environment from ConfigMap
        envFrom:
        - configMapRef:
            name: keycloak-config
        
        # Environment from Secret
        env:
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-secrets
              key: KC_DB_PASSWORD
        - name: KEYCLOAK_ADMIN
          valueFrom:
            secretKeyRef:
              name: keycloak-secrets
              key: KEYCLOAK_ADMIN
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-secrets
              key: KEYCLOAK_ADMIN_PASSWORD
        
        # Mount Oracle wallet
        volumeMounts:
        - name: oracle-wallet
          mountPath: /opt/oracle/wallet
          readOnly: true
        
        # OPTIMIZED: Proper resources for single pod
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        
        # Health checks with longer timeouts for Oracle connection
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
          initialDelaySeconds: 180  # Longer for Oracle setup
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 15
        
        # Extended startup time for Oracle
        startupProbe:
          httpGet:
            path: /health/started
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 10
          failureThreshold: 60  # Up to 15 minutes
      
      volumes:
      - name: oracle-wallet
        secret:
          secretName: oracle-wallet
          defaultMode: 0644

---
apiVersion: v1
kind: Service
metadata:
  name: june-idp
  namespace: june-services
  labels:
    app: june-idp
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: june-idp

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: june-idp
  namespace: june-services
  labels:
    app: june-idp
  annotations:
    iam.gke.io/gcp-service-account: june-idp-gke@main-buffer-469817-v7.iam.gserviceaccount.com