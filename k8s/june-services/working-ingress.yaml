# k8s/june-services/working-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: june-ingress
  namespace: june-services
  annotations:
    # CRITICAL: GKE requires explicit ingress class
    kubernetes.io/ingress.class: "gce"
    # Static IP (create this first)
    kubernetes.io/ingress.global-static-ip-name: "june-services-ip"
    # SSL certificates
    networking.gke.io/managed-certificates: "june-ssl-cert"
spec:
  rules:
  - host: june-orchestrator.allsafe.world
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: june-orchestrator
            port:
              number: 8080
  - host: june-stt.allsafe.world
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: june-stt
            port:
              number: 8080
  - host: june-idp.allsafe.world
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: june-idp
            port:
              number: 8080
  - host: june-media.allsafe.world
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: june-media-relay
            port:
              number: 8080

---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: june-ssl-cert
  namespace: june-services
spec:
  domains:
    - june-orchestrator.allsafe.world
    - june-stt.allsafe.world
    - june-idp.allsafe.world
    - june-media.allsafe.world