# SkyPilot task definition for June GPU services
name: june-gpu-services

resources:
  # Preferred and fallback GPUs in order of preference
  accelerators:
    - RTX3090:1    # preferred
    - RTX4080:1    # acceptable
    - RTX4070:1    # acceptable
  disk_size: 50
  memory: 16+   # allow larger bundles
  cpus: 8+      # allow larger bundles

setup: |
  set -e
  echo "📦 Installing Tailscale..."
  curl -fsSL https://tailscale.com/install.sh | sh
  echo "🔗 Connecting to Headscale VPN..."
  tailscale up --authkey=${HEADSCALE_AUTH_KEY} \
    --login-server=https://headscale.ozzu.world \
    --hostname=skypilot-gpu-${SKYPILOT_TASK_ID}
  if ! command -v docker-compose &> /dev/null; then
    echo "📦 Installing Docker Compose..."
    curl -L "https://github.com/docker/compose/releases/download/v2.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
  fi
  nvidia-smi
  echo "✅ Setup complete"

run: |
  set -e
  cat > docker-compose.yaml << 'EOF'
  version: '3.8'
  services:
    june-tts:
      image: ozzuworld/june-tts:latest
      container_name: june-tts
      restart: unless-stopped
      deploy:
        resources:
          reservations:
            devices:
              - driver: nvidia
                count: 1
                capabilities: [gpu]
      environment:
        - TTS_PORT=8000
        - TTS_HOME=/app/models
        - TTS_CACHE_PATH=/app/cache
        - ORCHESTRATOR_URL=${ORCHESTRATOR_URL}
      ports:
        - "8000:8000"
      volumes:
        - tts-models:/app/models
        - tts-cache:/app/cache
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
        interval: 30s
        timeout: 10s
        retries: 3

    june-stt:
      image: ozzuworld/june-stt:latest
      container_name: june-stt
      restart: unless-stopped
      deploy:
        resources:
          reservations:
            devices:
              - driver: nvidia
                count: 1
                capabilities: [gpu]
      environment:
        - STT_PORT=8001
        - WHISPER_DEVICE=cuda
        - WHISPER_COMPUTE_TYPE=float16
        - ORCHESTRATOR_URL=${ORCHESTRATOR_URL}
        - LIVEKIT_URL=${LIVEKIT_URL}
        - ROOM_NAME=ozzu-main
      ports:
        - "8001:8001"
      volumes:
        - stt-models:/app/models
        - stt-cache:/app/cache
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8001/healthz"]
        interval: 30s
        timeout: 10s
        retries: 3

  volumes:
    tts-models:
    tts-cache:
    stt-models:
    stt-cache:
  EOF

  echo "🚀 Starting GPU services..."
  docker-compose up -d
  echo "⏳ Waiting for services to be healthy..."
  for i in {1..30}; do
    if curl -sf http://localhost:8000/healthz && curl -sf http://localhost:8001/healthz; then
      echo "✅ All services healthy"
      break
    fi
    echo "Waiting... ($i/30)"
    sleep 10
  done
  echo "📊 Tailscale Status:"
  tailscale status
  docker-compose logs -f

envs:
  HEADSCALE_AUTH_KEY: ${HEADSCALE_AUTH_KEY}
  ORCHESTRATOR_URL: ${ORCHESTRATOR_URL}
  LIVEKIT_URL: ${LIVEKIT_URL}
