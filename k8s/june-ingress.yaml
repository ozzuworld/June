apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: june-services-ingress
  namespace: june-services
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://allsafe.world,http://localhost:8081"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  tls:
  - hosts:
    - api.allsafe.world
    - stt.allsafe.world
    - tts.allsafe.world
    - idp.allsafe.world
    secretName: june-services-tls
  
  rules:
  # API / Orchestrator
  - host: api.allsafe.world
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: june-orchestrator
            port:
              number: 80
  
  # STT Service
  - host: stt.allsafe.world
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: june-stt
            port:
              number: 8000
  
  # TTS Service
  - host: tts.allsafe.world
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: june-tts
            port:
              number: 8000
  
  # Keycloak IDP
  - host: idp.allsafe.world
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: keycloak
            port:
              number: 8080