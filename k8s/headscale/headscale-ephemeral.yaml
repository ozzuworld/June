# Headscale (self-hosted control plane) - ephemeral storage variant
# Use this on clusters without a dynamic storage provisioner.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: headscale-ephemeral
  namespace: headscale
spec:
  replicas: 1
  selector:
    matchLabels:
      app: headscale
      storage: ephemeral
  template:
    metadata:
      labels:
        app: headscale
        storage: ephemeral
    spec:
      containers:
      - name: headscale
        image: headscale/headscale:latest
        imagePullPolicy: IfNotPresent
        args: ["serve", "--config", "/etc/headscale/config.yaml"]
        ports:
        - name: https
          containerPort: 50443
        - name: metrics
          containerPort: 50480
        volumeMounts:
        - name: config
          mountPath: /etc/headscale
        - name: data
          mountPath: /var/lib/headscale
        env:
        - name: LOG_LEVEL
          value: info
      volumes:
      - name: config
        configMap:
          name: headscale-config
      - name: data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: headscale-ephemeral
  namespace: headscale
  labels:
    app: headscale
    storage: ephemeral
spec:
  type: ClusterIP
  selector:
    app: headscale
    storage: ephemeral
  ports:
  - name: https
    port: 443
    targetPort: 50443
  - name: metrics
    port: 80
    targetPort: 50480
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: headscale-ephemeral-ingress
  namespace: headscale
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - headscale.ozzu.world
    secretName: headscale-tls
  rules:
  - host: headscale.ozzu.world
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: headscale-ephemeral
            port:
              number: 443
