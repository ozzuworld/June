# Headscale (Self-hosted Tailscale control plane) K8s deployment
# Namespace
---
apiVersion: v1
kind: Namespace
metadata:
  name: headscale
---
# Persistent storage for headscale (SQLite DB)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: headscale-data
  namespace: headscale
spec:
  accessModes: ["ReadWriteOnce"]
  resources: { requests: { storage: 5Gi } }
---
# Base configuration as ConfigMap (minimal, no OIDC now)
apiVersion: v1
kind: ConfigMap
metadata:
  name: headscale-config
  namespace: headscale
data:
  config.yaml: |
    server_url: https://headscale.ozzu.world
    # Listen on 50443 for HTTPS (behind ingress), and 50480 for health
    listen_addr: 0.0.0.0:50443
    metrics_listen_addr: 0.0.0.0:50480
    disable_check_updates: true
    # SQLite storage
    db_type: sqlite
    db_path: /var/lib/headscale/db.sqlite
    # Derp (use public for now; can self-host later)
    derp:
      urls: ["https://controlplane.tailscale.com/derpmap/default"]
      auto_update_enabled: true
      update_frequency: 24h
    # DNS (optional)
    dns_config:
      magic_dns: true
      base_domain: tail.ozzu.world
---
# Headscale secret for TLS (Ingress terminates TLS; internal can be HTTP)
apiVersion: v1
kind: Secret
metadata:
  name: headscale-secret
  namespace: headscale
type: Opaque
stringData:
  HS_PRIVATE_KEY: ""
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: headscale
  namespace: headscale
spec:
  replicas: 1
  selector:
    matchLabels:
      app: headscale
  template:
    metadata:
      labels:
        app: headscale
    spec:
      containers:
      - name: headscale
        image: headscale/headscale:latest
        imagePullPolicy: IfNotPresent
        args: ["serve", "--config", "/etc/headscale/config.yaml"]
        ports:
        - name: https
          containerPort: 50443
        - name: metrics
          containerPort: 50480
        volumeMounts:
        - name: config
          mountPath: /etc/headscale
        - name: data
          mountPath: /var/lib/headscale
        env:
        - name: LOG_LEVEL
          value: info
      volumes:
      - name: config
        configMap:
          name: headscale-config
      - name: data
        persistentVolumeClaim:
          claimName: headscale-data
---
# ClusterIP Service
apiVersion: v1
kind: Service
metadata:
  name: headscale
  namespace: headscale
  labels:
    app: headscale
spec:
  type: ClusterIP
  selector:
    app: headscale
  ports:
  - name: https
    port: 443
    targetPort: 50443
  - name: metrics
    port: 80
    targetPort: 50480
