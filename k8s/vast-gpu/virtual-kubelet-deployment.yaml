# Virtual Kubelet deployment for Vast.ai integration - North America Optimized
apiVersion: apps/v1
kind: Deployment
metadata:
  name: virtual-kubelet-vast
  namespace: kube-system
  labels:
    app: virtual-kubelet-vast
    region: north-america
spec:
  replicas: 1
  selector:
    matchLabels:
      app: virtual-kubelet-vast
  template:
    metadata:
      labels:
        app: virtual-kubelet-vast
        region: north-america
    spec:
      serviceAccountName: virtual-kubelet-vast
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
      - name: virtual-kubelet
        image: ozzuworld/virtual-kubelet-vast-python:latest
        env:
        # Kubelet configuration
        - name: KUBELET_PORT
          value: "10250"
        - name: NODENAME
          value: "vast-gpu-node-python"  # Match the node name from logs
        
        # Vast.ai API configuration
        - name: VAST_API_KEY
          valueFrom:
            secretKeyRef:
              name: vast-credentials
              key: api-key
        - name: VAST_API_URL
          value: "https://console.vast.ai/api/v0"
        
        # TIMEOUT CONFIGURATION - Increased to prevent recreation loop
        - name: VAST_STARTUP_TIMEOUT
          value: "900"  # 15 minutes for GPU container startup
        - name: VAST_HEALTH_CHECK_TIMEOUT
          value: "600"  # 10 minutes for health checks
        - name: VAST_INSTANCE_READY_TIMEOUT
          value: "900"  # 15 minutes for instance readiness
        - name: VAST_DEBUG_MODE
          value: "true"  # Enable debugging
        
        # North America optimization settings
        - name: VAST_PREFERRED_REGIONS
          value: "US-CA,US-WA,US-OR,US-TX,US-CO,US-AZ,US-NY,US-FL,US-VA,CA-ON,CA-BC"
        - name: VAST_PRIMARY_REGION
          value: "US"
        - name: VAST_FALLBACK_REGIONS
          value: "CA,MX"
        - name: VAST_BLOCKED_REGIONS
          value: "RU,CN,KP"  # Blocked countries
        
        # Performance optimization - Relaxed for more availability
        - name: VAST_LATENCY_CHECK_ENABLED
          value: "false"  # Disable for troubleshooting
        - name: VAST_MAX_LATENCY_MS
          value: "100"  # Increased from 50ms
        - name: VAST_BANDWIDTH_MIN_MBPS
          value: "50"   # Reduced from 100 for more availability
        
        # Template configuration
        - name: VAST_CONTAINER_IMAGE
          value: "ozzuworld/june-gpu-multi:latest"
        - name: VAST_DOCKER_OPTIONS
          value: "-p 8000:8000 -p 8001:8001 --gpus all --restart unless-stopped"
        
        volumeMounts:
        - name: credentials
          mountPath: /etc/virtual-kubelet
          readOnly: true
        - name: provider-config
          mountPath: /etc/vast-config
          readOnly: true
        
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        
        # PROBE PATH FIXES: match VK HTTP server endpoints
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10255
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /readyz
            port: 10255
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 10
          failureThreshold: 5
        startupProbe:
          httpGet:
            path: /healthz
            port: 10255
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      
      volumes:
      - name: credentials
        secret:
          secretName: vast-credentials
      - name: provider-config
        configMap:
          name: vast-provider-config
      
      tolerations:
      - key: node.alpha.kubernetes.io/unreachable
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 0
      - key: node.alpha.kubernetes.io/not-ready
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 0
      
      # Prefer to run on control plane nodes
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
      
      # Restart policy for reliability
      restartPolicy: Always
