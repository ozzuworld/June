# Virtual Kubelet Vast.ai Provider Configuration - North America Optimized
apiVersion: v1
kind: ConfigMap
metadata:
  name: vast-provider-config
  namespace: kube-system
  labels:
    app: virtual-kubelet-vast
data:
  # Instance Selection Strategy - Aligned with Vast.ai API 2024/2025
  instance-selection.yaml: |
    # Vast.ai instance selection criteria (maps to API search offers)
    selection:
      # GPU requirements (gpu_name, gpu_ram filters)
      gpu:
        primary_type: "RTX_4060"     # Changed to match deployment
        fallback_types:              # Expanded fallback options
          - "RTX_3060"
          - "RTX_3060_Ti"
          - "RTX_4060_Ti"
          - "RTX_4070"
          - "RTX_3070"
          - "RTX_3080"
          - "RTX_3090"
          - "RTX_A5000"
        memory_gb: 8                 # Reduced from 12 for more availability
        count: 1                     # Number of GPUs needed
      
      # Performance requirements - Relaxed for more availability
      performance:
        min_download_mbps: 50        # Reduced from 100
        min_upload_mbps: 50          # Reduced from 100
        reliability_score: 0.85      # Reduced from 0.95
        max_price_per_hour: 0.80     # Increased from 0.50
        verified_only: false         # Disabled for more options
        rentable_only: true          # rentable=true filter (required)
      
      # Geographic preferences for North America low latency
      locations:
        priority_regions:
          - geolocation: "US"         # United States (primary)
            subregions: ["US-CA", "US-WA", "US-OR"]  # West Coast first
          - geolocation: "US" 
            subregions: ["US-TX", "US-CO", "US-AZ"]  # Central/Southwest
          - geolocation: "US"
            subregions: ["US-NY", "US-FL", "US-VA"]  # East Coast
          - geolocation: "CA"         # Canada fallback
            subregions: ["CA-ON", "CA-BC"]
        fallback_regions:
          - geolocation: "US"         # Any US location
          - geolocation: "CA"         # Any Canada location
          - geolocation: "MX"         # Mexico (North America)
        blocked_regions: []           # Countries to avoid
      
      # System requirements
      system:
        min_ram_gb: 12               # Reduced from 16
        min_disk_gb: 50              # Minimum disk space
        cpu_cores: 4                 # Minimum CPU cores
    
    # Template configuration for launched instances
    template:
      image: "ozzuworld/june-gpu-multi:latest"  # Updated image name
      docker_options: "-p 8000:8000 -p 8001:8001 --gpus all --restart unless-stopped"
      env_vars:
        STT_PORT: "8001"
        TTS_PORT: "8000"
        CUDA_VISIBLE_DEVICES: "0"
        WHISPER_DEVICE: "cuda"
        WHISPER_COMPUTE_TYPE: "float16"
        TTS_CACHE_PATH: "/app/cache"
        TTS_HOME: "/app/models"
        COQUI_TOS_AGREED: "1"
        PYTHONPATH: "/app:/app/stt:/app/tts"
      onstart_script: |
        #!/bin/bash
        echo "[VAST-NA] Starting June GPU Multi-Service Container (North America)"
        echo "[VAST-NA] Location: $(curl -s ipinfo.io/region 2>/dev/null || echo 'Unknown')"
        nvidia-smi --query-gpu=name,memory.total --format=csv,noheader,nounits
        /app/start-services.sh
    
    # Auto-scaling configuration
    autoscale:
      min_instances: 0              # Scale to zero when no demand
      max_instances: 5              # Maximum concurrent instances
      scale_up_threshold: 0.8       # Resource usage to trigger scale up
      scale_down_delay: 300         # Seconds before scaling down idle instances
      instance_warmup_time: 600     # Increased from 180 to 10 minutes
      preemptible_allowed: false    # Avoid spot instances for reliability
    
    # Health monitoring and failover - CRITICAL TIMEOUT FIXES
    health:
      startup_timeout: 900          # Increased from 300 to 15 minutes
      health_check_interval: 60     # Increased from 30 to 60 seconds
      failure_threshold: 10         # Increased from 3 to 10
      success_threshold: 1          # Reduced from 2 to 1
      endpoints:
        - path: "/healthz"
          port: 8000
          service: "tts"
        - path: "/healthz"
          port: 8001
          service: "stt"
      latency_check:
        enabled: false              # Disabled for troubleshooting
        max_acceptable_ms: 200      # Increased from 50
        timeout_seconds: 10         # Increased from 5
---
# Selection algorithm weights optimized for North America
apiVersion: v1
kind: ConfigMap
metadata:
  name: vast-selection-weights
  namespace: kube-system
data:
  weights.yaml: |
    # Scoring weights for instance selection (total should equal 1.0)
    # Optimized for availability over performance during troubleshooting
    scoring:
      price: 0.40                  # Increased price weight for availability
      availability: 0.25           # Increased availability weight
      gpu_match: 0.20              # 20% weight on GPU type match
      reliability: 0.10            # Reduced reliability requirement
      latency: 0.05                # Reduced latency priority
    
    # Bonus/penalty modifiers - Relaxed for troubleshooting
    modifiers:
      us_west_coast: +0.10         # Reduced bonus
      us_central: +0.08            # Reduced bonus
      us_east_coast: +0.05         # Reduced bonus
      canada: +0.03                # Small bonus for Canada
      exact_gpu_match: +0.10       # Bonus for exact GPU type match
      verified_host: +0.05         # Reduced bonus
      high_bandwidth: +0.03        # Reduced bonus
      datacenter_tier: +0.02       # Reduced bonus
      new_host: 0.00               # Removed penalty
      high_latency: -0.10          # Reduced penalty
      non_na_location: -0.05       # Reduced penalty
    
    # API query construction - Relaxed filters
    api_query:
      base_filters:
        rentable: true              # rentable=true
        verified: false             # Disabled for more options
        gpu_name: "RTX_4060"        # Updated to match deployment
        gpu_ram_gte: 8              # Reduced from 12
        dph_lte: 0.80               # Increased from 0.50
        reliability_gte: 0.80       # Reduced from 0.95
        inet_down_gte: 50           # Reduced from 100
        inet_up_gte: 50             # Reduced from 100
        geolocation_in: ["US", "CA", "MX", "EU"]  # Added EU for more options
      
      ordering:
        primary: "dph+"             # Price ascending (cheapest first)
        secondary: "reliability-"   # Reliability descending (most reliable)
        tertiary: "inet_down-"      # Bandwidth descending (fastest)
      
      pagination:
        limit: 100                  # Fetch up to 100 offers for selection
        timeout_seconds: 15         # Increased API timeout
    
    # Blacklist criteria - Relaxed for troubleshooting
    blacklist:
      max_price_per_hour: 1.50      # Increased from 1.00
      min_reliability: 0.60         # Reduced from 0.80
      max_latency_ms: 300           # Increased from 100
      blocked_locations: ["RU", "CN", "KP"]  # Blocked countries
      blocked_hosts: []             # List of specific host IDs to avoid
      min_uptime_days: 7            # Reduced from 30