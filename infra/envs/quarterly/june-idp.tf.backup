# infra/envs/quarterly/june-idp.tf
# All IDP-related resources in one file

# Service Account for IDP
resource "google_service_account" "idp_sa" {
  account_id   = "june-idp-sa"
  display_name = "June IDP Cloud Run SA"
}

# Secret for IDP database password
resource "google_secret_manager_secret" "kc_db_password" {
  secret_id = "KC_DB_PASSWORD"

  replication {
    auto {}
  }
}

# Grant IDP service account access to the secret
resource "google_secret_manager_secret_iam_member" "kc_db_pw_access" {
  secret_id = google_secret_manager_secret.kc_db_password.id
  role      = "roles/secretmanager.secretAccessor"
  member    = "serviceAccount:${google_service_account.idp_sa.email}"
}

# IDP Cloud Run service
module "idp" {
  source  = "GoogleCloudPlatform/cloud-run/google"
  version = "~> 0.21"

  service_name = "june-idp"
  project_id   = var.project_id
  location     = var.region
  image        = var.image_idp

  service_account_email = google_service_account.idp_sa.email
  
  argument = [
    "start",
    "--http-enabled=true",
    "--proxy-headers=xforwarded",
    "--hostname=${var.KC_BASE_URL}"
  ]

  env_vars = [
    { name = "KC_DB", value = "postgres" },
    { name = "KC_DB_URL", value = var.KC_DB_URL },
    { name = "KC_DB_USERNAME", value = var.KC_DB_USERNAME },
    { name = "KC_BOOTSTRAP_ADMIN_USERNAME", value = "admin" },
    { name = "KC_BOOTSTRAP_ADMIN_PASSWORD", value = "bootstrap-temp" }
  ]

  env_secret_vars = [
    {
      name = "KC_DB_PASSWORD"
      value_source = {
        secret_key_ref = {
          secret  = google_secret_manager_secret.kc_db_password.secret_id
          version = "latest"
        }
      }
    }
  ]

  limits = {
    cpu    = "1000m"
    memory = "2Gi"
  }

  template_annotations = {
    "autoscaling.knative.dev/minScale" = "0"
    "autoscaling.knative.dev/maxScale" = "3"
    "run.googleapis.com/sessionAffinity" = "true"
  }

  ports = {
    name = "http1"
    port = 8080
  }
}

output "idp_url" {
  value = module.idp.service_url
}