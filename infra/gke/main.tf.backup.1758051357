# Minimal working Terraform configuration
terraform {
  required_providers {
    google = {
      source  = "hashicorp/google"
      version = "~> 5.0"
    }
    kubernetes = {
      source  = "hashicorp/kubernetes"
      version = "~> 2.23"
    }
    random = {
      source  = "hashicorp/random"
      version = "~> 3.4"
    }
  }
}

variable "project_id" {
  description = "GCP Project ID"
  type        = string
}

variable "region" {
  description = "GCP Region"
  type        = string
  default     = "us-central1"
}

variable "cluster_name" {
  description = "GKE cluster name"
  type        = string
  default     = "june-unified-cluster"
}

# Enable required APIs
resource "google_project_service" "apis" {
  for_each = toset([
    "container.googleapis.com",
    "compute.googleapis.com",
    "sqladmin.googleapis.com",      # <-- fix
    "redis.googleapis.com",
    "artifactregistry.googleapis.com",
    "secretmanager.googleapis.com"
  ])
  project             = var.project_id
  service             = each.value
  disable_on_destroy  = false
}


# GKE Autopilot - Minimal config
resource "google_container_cluster" "cluster" {
  name     = var.cluster_name
  location = var.region
  project  = var.project_id
  
  enable_autopilot = true
  ip_allocation_policy {}
  
  depends_on = [google_project_service.apis]
}

# Simple PostgreSQL
resource "google_sql_database_instance" "postgres" {
  name             = "${var.cluster_name}-db"
  database_version = "POSTGRES_15"
  region           = var.region
  project          = var.project_id

  settings {
    tier = "db-f1-micro"
    ip_configuration {
      ipv4_enabled = true
      authorized_networks {
        name  = "allow-all"
        value = "0.0.0.0/0"
      }
    }
  }

  deletion_protection = false
}

# Database
resource "google_sql_database" "june_db" {
  name     = "june_idp"
  instance = google_sql_database_instance.postgres.name
  project  = var.project_id
}

# Database user
resource "random_password" "db_password" {
  length  = 16
  special = false
}

resource "google_sql_user" "june_user" {
  name     = "june_idp"
  instance = google_sql_database_instance.postgres.name
  password = random_password.db_password.result
  project  = var.project_id
}

# Simple Redis
resource "google_redis_instance" "redis" {
  name              = "${var.cluster_name}-redis"
  tier              = "BASIC"
  memory_size_gb    = 1
  project           = var.project_id
  region            = var.region
  authorized_network = google_compute_network.main.self_link  # create this network if needed
}


output "get_credentials_command" {
  value = "gcloud container clusters get-credentials ${google_container_cluster.cluster.name} --region=${var.region} --project=${var.project_id}"
}

output "postgres_ip" {
  value = google_sql_database_instance.postgres.public_ip_address
}

output "postgres_connection" {
  value = google_sql_database_instance.postgres.connection_name
}

output "db_password" {
  value     = random_password.db_password.result
  sensitive = true
}

output "redis_host" {
  value = google_redis_instance.redis.host
}
