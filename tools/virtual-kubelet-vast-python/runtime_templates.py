#!/usr/bin/env python3
# This file is auto-generated by the provider at runtime when creating a Vast.ai instance.
# It launches separate STT and TTS containers using prebuilt images and container-level Tailscale.

COMPOSE_YAML = r"""
version: "3.9"
services:
  june-tts:
    image: ghcr.io/ozzuworld/june-tts:latest
    container_name: june-tts
    restart: unless-stopped
    environment:
      - TTS_PORT=${TTS_PORT:-8000}
      - TTS_HOME=/app/models
      - NUMBA_DISABLE_JIT=1
      - NUMBA_CACHE_DIR=/tmp/numba_cache
      - PYTORCH_JIT=0
      - OMP_NUM_THREADS=1
      - TAILSCALE_AUTH_KEY=${TAILSCALE_AUTH_KEY}
    volumes:
      - tts-models:/app/models
      - tts-cache:/app/cache
    ports:
      - "${TTS_PORT:-8000}:8000"

  june-stt:
    image: ghcr.io/ozzuworld/june-stt:latest
    container_name: june-stt
    restart: unless-stopped
    environment:
      - STT_PORT=${STT_PORT:-8001}
      - WHISPER_DEVICE=cuda
      - WHISPER_COMPUTE_TYPE=float16
      - NUMBA_DISABLE_JIT=1
      - NUMBA_CACHE_DIR=/tmp/numba_cache
      - TAILSCALE_AUTH_KEY=${TAILSCALE_AUTH_KEY}
    volumes:
      - stt-models:/app/models
      - stt-cache:/app/cache
    ports:
      - "${STT_PORT:-8001}:8001"

volumes:
  tts-models: {}
  tts-cache: {}
  stt-models: {}
  stt-cache: {}
"""

BASH_ONSTART = r"""
set -euo pipefail

# Ensure docker-compose is available (Compose V2 via docker CLI preferred)
if ! docker compose version >/dev/null 2>&1; then
  if ! command -v docker-compose >/dev/null 2>&1; then
    echo "[INIT] Installing docker-compose..."
    curl -L "https://github.com/docker/compose/releases/download/2.27.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
    ln -sf /usr/local/bin/docker-compose /usr/bin/docker-compose
  fi
fi

# Write compose file
mkdir -p /root/june
cat > /root/june/june-stack.yml <<'EOF'
{compose}
EOF

# Prepare .env with values provided by provider
cat > /root/june/.env <<EOF
TAILSCALE_AUTH_KEY={tailscale_auth}
TTS_PORT={tts_port}
STT_PORT={stt_port}
EOF

# Bring up the stack
cd /root/june
if docker compose version >/dev/null 2>&1; then
  docker compose --env-file .env -f june-stack.yml up -d
else
  docker-compose --env-file .env -f june-stack.yml up -d
fi

# Basic health loop
for i in $(seq 1 40); do
  if curl -sf http://localhost:${{TTS_PORT:-8000}}/healthz >/dev/null 2>&1 && \
     curl -sf http://localhost:${{STT_PORT:-8001}}/healthz >/dev/null 2>&1; then
    echo "[INIT] Both services healthy"; exit 0
  fi
  echo "[INIT] Waiting for services... ($i/40)"; sleep 6
done

echo "[INIT] Services not healthy within timeout"; exit 1
"""
