---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: virtual-kubelet-vast
  namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: virtual-kubelet-vast
rules:
- apiGroups: [""]
  resources: ["pods", "pods/status"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["nodes", "nodes/status"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: virtual-kubelet-vast
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: virtual-kubelet-vast
subjects:
- kind: ServiceAccount
  name: virtual-kubelet-vast
  namespace: kube-system

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: virtual-kubelet-vast
  namespace: kube-system
  labels:
    app: virtual-kubelet-vast
spec:
  replicas: 1
  selector:
    matchLabels:
      app: virtual-kubelet-vast
  template:
    metadata:
      labels:
        app: virtual-kubelet-vast
    spec:
      serviceAccountName: virtual-kubelet-vast
      containers:
      - name: virtual-kubelet
        image: ozzuworld/virtual-kubelet-vast-python:latest
        imagePullPolicy: Never
        env:
        - name: VAST_API_KEY
          valueFrom:
            secretKeyRef:
              name: vast-api-credentials
              key: api-key
        - name: NODE_NAME
          value: "vast-gpu-node-python"
        - name: MAX_INSTANCES
          value: "1"
        - name: PYTHONUNBUFFERED
          value: "1"
        # TLS/CA env to ensure vastai CLI requests do not fail certificate verification
        - name: PYTHONHTTPSVERIFY
          value: "0"
        - name: CURL_CA_BUNDLE
          value: ""
        - name: REQUESTS_CA_BUNDLE
          value: ""
        - name: SSL_CERT_FILE
          value: ""
        ports:
        - containerPort: 10255
          name: http
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
