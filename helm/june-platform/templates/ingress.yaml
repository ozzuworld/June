# helm/june-platform/templates/ingress.yaml
{{- if and .Values.certificate.enabled (not .Values.certificate.useBackup) }}
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ .Values.domains.primary | replace "." "-" }}-wildcard
  namespace: {{ .Release.Namespace }}
spec:
  secretName: {{ .Values.certificate.secretName | default (printf "%s-wildcard-tls" (.Values.domains.primary | replace "." "-")) }}
  issuerRef:
    name: {{ .Values.certificate.issuer }}
    kind: ClusterIssuer
  commonName: {{ .Values.domains.primary }}
  dnsNames:
  - {{ .Values.domains.primary }}
  - "*.{{ .Values.domains.primary }}"
{{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: june-ingress
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if .Values.certificate.enabled }}
    cert-manager.io/cluster-issuer: {{ .Values.certificate.issuer }}
    {{- end }}
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    
    # WebSocket support for Janus
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/upstream-hash-by: "$request_uri"
    
    # Enhanced WebSocket support (optional - enable if snippets are allowed)
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_cache_bypass $http_upgrade;
    nginx.ingress.kubernetes.io/server-snippet: |
      map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
      }
spec:
  ingressClassName: nginx
  {{- if .Values.certificate.enabled }}
  tls:
  - hosts:
    - "*.{{ .Values.domains.primary }}"
    # Remove this line: - {{ .Values.domains.primary }}
    - {{ .Values.domains.api }}
    - {{ .Values.domains.idp }}
    - {{ .Values.domains.janus }}      # ‚Üê Add this
    - {{ .Values.domains.stt }}
    - {{ .Values.domains.tts }}
    secretName: {{ .Values.certificate.secretName | default (printf "%s-wildcard-tls" (.Values.domains.primary | replace "." "-")) }}
  {{- end }}

  rules:
  # ============================================
  # ORCHESTRATOR - Business Logic API
  # ============================================
  - host: {{ .Values.domains.api }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: june-orchestrator
            port:
              number: 8080
  
  # ============================================
  # JANUS GATEWAY - WebRTC (WebSocket)
  # Clients connect here directly for WebRTC
  # ============================================
  - host: {{ .Values.domains.primary }}
    http:
      paths:
      # Janus WebSocket endpoint
      - path: /janus-ws
        pathType: Prefix
        backend:
          service:
            name: june-janus
            port:
              number: 8188
      
      # Janus HTTP API endpoint
      - path: /janus
        pathType: Prefix
        backend:
          service:
            name: june-janus
            port:
              number: 8088
  
  # Add this after the IDENTITY PROVIDER section
  # ============================================
  # JANUS GATEWAY ON SUBDOMAIN - WebRTC
  # ============================================
  - host: {{ .Values.domains.janus }}
    http:
      paths:
      # Janus WebSocket endpoint
      - path: /janus-ws
        pathType: Prefix
        backend:
          service:
            name: june-janus
            port:
              number: 8188
      
      # Janus HTTP API endpoint
      - path: /janus
        pathType: Prefix
        backend:
          service:
            name: june-janus
            port:
              number: 8088
  
  # ============================================
  # IDENTITY PROVIDER (KEYCLOAK)
  # ============================================
  - host: {{ .Values.domains.idp }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: june-idp
            port:
              number: 8080
  
  {{- if .Values.stt.enabled }}
  # ============================================
  # SPEECH-TO-TEXT SERVICE
  # ============================================
  - host: {{ .Values.domains.stt }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: june-stt
            port:
              number: 8080
  {{- end }}
  
  {{- if .Values.tts.enabled }}
  # ============================================
  # TEXT-TO-SPEECH SERVICE
  # ============================================
  - host: {{ .Values.domains.tts }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: june-tts
            port:
              number: 8000
  {{- end }}