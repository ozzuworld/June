---
# helm/june-platform/templates/june-janus.yaml
{{- if .Values.janus.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: june-janus
  namespace: {{ .Release.Namespace }}
  labels:
    app: june-janus
    version: "1.0.0"
spec:
  replicas: {{ .Values.janus.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: june-janus
  template:
    metadata:
      labels:
        app: june-janus
        version: "1.0.0"
    spec:
      containers:
      - name: janus
        image: "{{ .Values.janus.image.repository }}:{{ .Values.janus.image.tag }}"
        imagePullPolicy: {{ .Values.janus.image.pullPolicy }}
        
        ports:
        - containerPort: 8088
          name: http
          protocol: TCP
        - containerPort: 8188
          name: websocket
          protocol: TCP
        - containerPort: 8089
          name: admin
          protocol: TCP
        - containerPort: 7088
          name: admin-ws
          protocol: TCP
        
        env:
        # Janus API secrets
        - name: JANUS_API_SECRET
          value: {{ .Values.janus.apiSecret | quote }}
        - name: JANUS_ADMIN_SECRET
          value: {{ .Values.janus.adminKey | quote }}
        
        # STUN/TURN Configuration (swmansion/janus-gateway environment variables)
        - name: STUN_SERVER
          value: {{ .Values.janus.stun.server | quote }}
        - name: STUN_PORT
          value: {{ .Values.janus.stun.port | quote }}
        
        - name: TURN_SERVER
          value: {{ .Values.janus.turn.server | quote }}
        - name: TURN_PORT
          value: {{ .Values.janus.turn.port | quote }}
        - name: TURN_USER
          value: {{ .Values.janus.turn.username | quote }}
        - name: TURN_PASSWORD
          value: {{ .Values.janus.turn.password | quote }}
        - name: TURN_TYPE
          value: {{ .Values.janus.turn.type | quote }}
        
        # WebRTC Configuration
        - name: WEBSOCKETS_ENABLED
          value: {{ .Values.janus.webrtc.websocketsEnabled | quote }}
        - name: RTP_PORT_RANGE
          value: {{ .Values.janus.webrtc.rtpPortRange | quote }}
        - name: ICE_NOMINATION
          value: {{ .Values.janus.webrtc.iceNomination | quote }}
        - name: ICE_TCP
          value: {{ .Values.janus.webrtc.iceTcp | quote }}
        - name: FULL_TRICKLE
          value: {{ .Values.janus.webrtc.fullTrickle | quote }}

        
        # STUNner/TURN configuration
        - name: STUN_SERVER
          valueFrom:
            configMapKeyRef:
              name: june-janus-config
              key: STUN_SERVER
        - name: TURN_SERVER
          valueFrom:
            configMapKeyRef:
              name: june-janus-config
              key: TURN_SERVER
        - name: TURN_USERNAME
          valueFrom:
            configMapKeyRef:
              name: june-janus-config
              key: TURN_USERNAME
        - name: TURN_CREDENTIAL
          valueFrom:
            configMapKeyRef:
              name: june-janus-config
              key: TURN_CREDENTIAL
        
        resources:
          requests:
            memory: {{ .Values.janus.resources.requests.memory }}
            cpu: {{ .Values.janus.resources.requests.cpu }}
          limits:
            memory: {{ .Values.janus.resources.limits.memory }}
            cpu: {{ .Values.janus.resources.limits.cpu }}
        
        readinessProbe:
          httpGet:
            path: /janus/info
            port: 8088
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        
        livenessProbe:
          httpGet:
            path: /janus/info
            port: 8088
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 5

---
apiVersion: v1
kind: Service
metadata:
  name: june-janus
  namespace: {{ .Release.Namespace }}
  labels:
    app: june-janus
spec:
  type: ClusterIP
  selector:
    app: june-janus
  ports:
  - port: 8088
    targetPort: 8088
    name: http
    protocol: TCP
  - port: 8188
    targetPort: 8188
    name: websocket
    protocol: TCP
  - port: 8089
    targetPort: 8089
    name: admin
    protocol: TCP
  - port: 7088
    targetPort: 7088
    name: admin-ws
    protocol: TCP
{{- end }}