---
# helm/june-platform/templates/june-orchestrator.yaml
{{- if .Values.orchestrator.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: june-orchestrator
  namespace: {{ .Release.Namespace }}
  labels:
    app: june-orchestrator
    version: "2.0.0"
spec:
  replicas: {{ .Values.orchestrator.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: june-orchestrator
  template:
    metadata:
      labels:
        app: june-orchestrator
        version: "2.0.0"
    spec:
      containers:
      - name: orchestrator
        image: "{{ .Values.orchestrator.image.repository }}:{{ .Values.orchestrator.image.tag }}"
        imagePullPolicy: {{ .Values.orchestrator.image.pullPolicy }}
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        
        env:
        # ============================================
        # BASIC SERVICE CONFIGURATION
        # ============================================
        - name: PORT
          value: "8080"
        - name: HOST
          value: "0.0.0.0"
        - name: LOG_LEVEL
          value: "INFO"
        - name: ENVIRONMENT
          value: {{ .Values.global.environment }}
        
        # ============================================
        # CORS CONFIGURATION
        # ============================================
        - name: CORS_ALLOW_ORIGINS
          value: "https://{{ .Values.domains.primary }},https://app.{{ .Values.domains.primary }}"
        
        # ============================================
        # AI SERVICE (GEMINI)
        # ============================================
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: june-secrets
              key: gemini-api-key
        
        # ============================================
        # KEYCLOAK AUTHENTICATION
        # ============================================
        - name: KEYCLOAK_URL
          value: "http://june-idp.{{ .Release.Namespace }}.svc.cluster.local:8080"
        - name: KEYCLOAK_REALM
          value: {{ .Values.keycloak.realm }}
        - name: KEYCLOAK_CLIENT_ID
          value: "june-orchestrator"
        
        # ============================================
        # SERVICE URLS (STT, TTS)
        # ============================================
        - name: TTS_SERVICE_URL
          value: "http://june-tts.{{ .Release.Namespace }}.svc.cluster.local:8000"
        - name: STT_SERVICE_URL
          value: "http://june-stt.{{ .Release.Namespace }}.svc.cluster.local:8080"
        
        # ============================================
        # JANUS GATEWAY (Admin API only - NO WebRTC)
        # For managing rooms, getting stats, etc.
        # ============================================
        - name: JANUS_URL
          valueFrom:
            configMapKeyRef:
              name: june-janus-config
              key: JANUS_HTTP_URL
        - name: JANUS_ADMIN_URL
          valueFrom:
            configMapKeyRef:
              name: june-janus-config
              key: JANUS_ADMIN_URL
        - name: JANUS_ADMIN_SECRET
          value: "janusoverlord"
        
        # ============================================
        # SERVICE AUTHENTICATION
        # ============================================
        - name: STT_SERVICE_TOKEN
          valueFrom:
            secretKeyRef:
              name: service-auth-secret
              key: stt-service-token
              optional: true
        
        # ============================================
        # RESOURCE LIMITS
        # ============================================
        resources:
          requests:
            memory: {{ .Values.orchestrator.resources.requests.memory }}
            cpu: {{ .Values.orchestrator.resources.requests.cpu }}
          limits:
            memory: {{ .Values.orchestrator.resources.limits.memory }}
            cpu: {{ .Values.orchestrator.resources.limits.cpu }}
        
        # ============================================
        # HEALTH CHECKS
        # ============================================
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 10
          failureThreshold: 5

---
apiVersion: v1
kind: Service
metadata:
  name: june-orchestrator
  namespace: {{ .Release.Namespace }}
  labels:
    app: june-orchestrator
spec:
  type: ClusterIP
  selector:
    app: june-orchestrator
  ports:
  - port: 8080
    targetPort: 8080
    name: http
    protocol: TCP
{{- end }}